$(document).ready(function(){function e(e,o){var t=e-.5+Math.random()*(o-e+1);return t=Math.round(t)}$(".slider").slick({autoplay:!0,autoplaySpeed:5e3,dots:!0,draggable:!1,fade:!0,speed:1e3}),$(".slider").on("beforeChange",function(e,o,t,a){$(o.$slides).removeClass("is-animating")}),$(".slider").on("afterChange",function(e,o,t,a){$(o.$slides.get(t)).addClass("is-animating")}),$(".reviews__slider").slick({autoplay:!0,autoplaySpeed:3e3,dots:!1,speed:1e3,arrows:!1,infinite:!0,fade:!0,cssEase:"linear"});var o=!0,t=$("#todayCount"),a=$("#yestardayCount"),n=$("#weekCount");$(window).on("scroll load resize",function(){if(!o)return!1;var e=$(window).scrollTop(),t=$("#counts").offset().top,a=$(window).height(),n=$(document).height(),s=$("#counts").outerHeight();(e+800>=t||a+e==n||s+t<a)&&($(".spincrement").spincrement({thousandSeparator:"",duration:1200,from:0}),o=!1)}),t.html(e(10,30)),a.html(e(20,40)),n.html(e(200,300)),$(".navbar-nav").on("click","a",function(e){e.preventDefault();var o=$(this).attr("href"),t=$(o).offset().top;$("body,html").animate({scrollTop:t},1500)});var s=$(".cd-top");$(window).scroll(function(){$(this).scrollTop()>300?s.addClass("cd-is-visible"):s.removeClass("cd-is-visible cd-fade-out"),$(this).scrollTop()>1200&&s.addClass("cd-fade-out")}),s.on("click",function(e){e.preventDefault(),$("body,html").animate({scrollTop:0},700)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiJCIsImRvY3VtZW50IiwicmVhZHkiLCJyYW5kb21JbnRlZ2VyIiwibWluIiwibWF4IiwicmFuZCIsIk1hdGgiLCJyYW5kb20iLCJyb3VuZCIsInNsaWNrIiwiYXV0b3BsYXkiLCJhdXRvcGxheVNwZWVkIiwiZG90cyIsImRyYWdnYWJsZSIsImZhZGUiLCJzcGVlZCIsIm9uIiwiZXZlbnQiLCJjdXJyZW50U2xpZGUiLCJuZXh0U2xpZGUiLCIkc2xpZGVzIiwicmVtb3ZlQ2xhc3MiLCJnZXQiLCJhZGRDbGFzcyIsImFycm93cyIsImluZmluaXRlIiwiY3NzRWFzZSIsInNob3ciLCJ0b2RheUNvdW50IiwieWVzdGFyZGF5Q291bnQiLCJ3ZWVrQ291bnQiLCJ3aW5kb3ciLCJ3X3RvcCIsInNjcm9sbFRvcCIsImVfdG9wIiwib2Zmc2V0IiwidG9wIiwid19oZWlnaHQiLCJoZWlnaHQiLCJkX2hlaWdodCIsImVfaGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJzcGluY3JlbWVudCIsInRob3VzYW5kU2VwYXJhdG9yIiwiZHVyYXRpb24iLCJmcm9tIiwiaHRtbCIsInByZXZlbnREZWZhdWx0IiwiaWQiLCJ0aGlzIiwiYXR0ciIsImFuaW1hdGUiLCIkYmFja190b190b3AiLCJzY3JvbGwiXSwibWFwcGluZ3MiOiJBQUdBQSxFQUFFQyxVQUFVQyxNQUFNLFdBeURkLFFBQVNDLEdBQWNDLEVBQUtDLEdBQ3hCLEdBQUlDLEdBQU9GLEVBQU0sR0FBTUcsS0FBS0MsVUFBWUgsRUFBTUQsRUFBTSxFQUVwRCxPQURBRSxHQUFPQyxLQUFLRSxNQUFNSCxHQTFEdEJOLEVBQUUsV0FBV1UsT0FDVEMsVUFBVSxFQUNWQyxjQUFlLElBQ2ZDLE1BQU0sRUFDTkMsV0FBVyxFQUNYQyxNQUFNLEVBQ05DLE1BQU8sTUFHWGhCLEVBQUUsV0FBV2lCLEdBQUcsZUFBZ0IsU0FBU0MsRUFBT1IsRUFBT1MsRUFBY0MsR0FDakVwQixFQUFFVSxFQUFNVyxTQUFTQyxZQUFZLGtCQUdqQ3RCLEVBQUUsV0FBV2lCLEdBQUcsY0FBZSxTQUFTQyxFQUFPUixFQUFPUyxFQUFjQyxHQUNoRXBCLEVBQUVVLEVBQU1XLFFBQVFFLElBQUlKLElBQWVLLFNBQVMsa0JBR2hEeEIsRUFBRSxvQkFBb0JVLE9BQ2xCQyxVQUFVLEVBQ1ZDLGNBQWUsSUFDZkMsTUFBTSxFQUNORyxNQUFPLElBQ1BTLFFBQVEsRUFDUkMsVUFBVSxFQUNWWCxNQUFNLEVBQ05ZLFFBQVMsVUFHYixJQUFJQyxJQUFPLEVBRVBDLEVBQWE3QixFQUFFLGVBQ2Y4QixFQUFpQjlCLEVBQUUsbUJBQ25CK0IsRUFBWS9CLEVBQUUsYUFDbEJBLEdBQUVnQyxRQUFRZixHQUFHLHFCQUFzQixXQUUvQixJQUFJVyxFQUFNLE9BQU8sQ0FFakIsSUFBSUssR0FBUWpDLEVBQUVnQyxRQUFRRSxZQUNsQkMsRUFBUW5DLEVBVEQsV0FTYW9DLFNBQVNDLElBRTdCQyxFQUFXdEMsRUFBRWdDLFFBQVFPLFNBQ3JCQyxFQUFXeEMsRUFBRUMsVUFBVXNDLFNBRXZCRSxFQUFXekMsRUFkSixXQWNnQjBDLGVBRXhCVCxFQUFRLEtBQU9FLEdBQVNHLEVBQVdMLEdBQVNPLEdBQVlDLEVBQVdOLEVBQVFHLEtBQzFFdEMsRUFBRSxnQkFBZ0IyQyxhQUNkQyxrQkFBbUIsR0FDbkJDLFNBQVUsS0FDVkMsS0FBTSxJQUdWbEIsR0FBTyxLQVNmQyxFQUFXa0IsS0FBSzVDLEVBQWMsR0FBSSxLQUNsQzJCLEVBQWVpQixLQUFLNUMsRUFBYyxHQUFJLEtBQ3RDNEIsRUFBVWdCLEtBQUs1QyxFQUFjLElBQUssTUFFbENILEVBQUUsZUFBZWlCLEdBQUcsUUFBUSxJQUFLLFNBQVVDLEdBQ3ZDQSxFQUFNOEIsZ0JBRU4sSUFBSUMsR0FBTWpELEVBQUVrRCxNQUFNQyxLQUFLLFFBRW5CZCxFQUFNckMsRUFBRWlELEdBQUliLFNBQVNDLEdBRXpCckMsR0FBRSxhQUFhb0QsU0FBU2xCLFVBQVdHLEdBQU0sT0FJN0MsSUFHSWdCLEdBQWVyRCxFQUFFLFVBRXJCQSxHQUFFZ0MsUUFBUXNCLE9BQU8sV0FDWHRELEVBQUVrRCxNQUFNaEIsWUFORCxJQU0wQm1CLEVBQWE3QixTQUFTLGlCQUFtQjZCLEVBQWEvQixZQUFZLDZCQUNqR3RCLEVBQUVrRCxNQUFNaEIsWUFOSyxNQU9ibUIsRUFBYTdCLFNBQVMsaUJBSTlCNkIsRUFBYXBDLEdBQUcsUUFBUyxTQUFTQyxHQUM5QkEsRUFBTThCLGlCQUNOaEQsRUFBRSxhQUFhb0QsU0FDUGxCLFVBQVcsR0FiRyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQ3VzdG9tXHJcbiAqL1xyXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAkKCcuc2xpZGVyJykuc2xpY2soe1xyXG4gICAgICAgIGF1dG9wbGF5OiB0cnVlLFxyXG4gICAgICAgIGF1dG9wbGF5U3BlZWQ6IDUwMDAsXHJcbiAgICAgICAgZG90czogdHJ1ZSxcclxuICAgICAgICBkcmFnZ2FibGU6IGZhbHNlLFxyXG4gICAgICAgIGZhZGU6IHRydWUsXHJcbiAgICAgICAgc3BlZWQ6IDEwMDBcclxuICAgIH0pO1xyXG5cclxuICAgICQoJy5zbGlkZXInKS5vbignYmVmb3JlQ2hhbmdlJywgZnVuY3Rpb24oZXZlbnQsIHNsaWNrLCBjdXJyZW50U2xpZGUsIG5leHRTbGlkZSkge1xyXG4gICAgICAgICQoc2xpY2suJHNsaWRlcykucmVtb3ZlQ2xhc3MoJ2lzLWFuaW1hdGluZycpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnLnNsaWRlcicpLm9uKCdhZnRlckNoYW5nZScsIGZ1bmN0aW9uKGV2ZW50LCBzbGljaywgY3VycmVudFNsaWRlLCBuZXh0U2xpZGUpIHtcclxuICAgICAgICAkKHNsaWNrLiRzbGlkZXMuZ2V0KGN1cnJlbnRTbGlkZSkpLmFkZENsYXNzKCdpcy1hbmltYXRpbmcnKTtcclxuICAgIH0pO1xyXG5cclxuICAgICQoJy5yZXZpZXdzX19zbGlkZXInKS5zbGljayh7XHJcbiAgICAgICAgYXV0b3BsYXk6IHRydWUsXHJcbiAgICAgICAgYXV0b3BsYXlTcGVlZDogMzAwMCxcclxuICAgICAgICBkb3RzOiBmYWxzZSxcclxuICAgICAgICBzcGVlZDogMTAwMCxcclxuICAgICAgICBhcnJvd3M6IGZhbHNlLFxyXG4gICAgICAgIGluZmluaXRlOiB0cnVlLFxyXG4gICAgICAgIGZhZGU6IHRydWUsXHJcbiAgICAgICAgY3NzRWFzZTogJ2xpbmVhcidcclxuICAgIH0pO1xyXG5cclxuICAgIHZhciBzaG93ID0gdHJ1ZTtcclxuICAgIHZhciBjb3VudGJveCA9IFwiI2NvdW50c1wiO1xyXG4gICAgdmFyIHRvZGF5Q291bnQgPSAkKCcjdG9kYXlDb3VudCcpO1xyXG4gICAgdmFyIHllc3RhcmRheUNvdW50ID0gJCgnI3llc3RhcmRheUNvdW50Jyk7XHJcbiAgICB2YXIgd2Vla0NvdW50ID0gJCgnI3dlZWtDb3VudCcpO1xyXG4gICAgJCh3aW5kb3cpLm9uKFwic2Nyb2xsIGxvYWQgcmVzaXplXCIsIGZ1bmN0aW9uKCl7XHJcblxyXG4gICAgICAgIGlmKCFzaG93KSByZXR1cm4gZmFsc2U7XHJcblxyXG4gICAgICAgIHZhciB3X3RvcCA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuICAgICAgICB2YXIgZV90b3AgPSAkKGNvdW50Ym94KS5vZmZzZXQoKS50b3A7XHJcblxyXG4gICAgICAgIHZhciB3X2hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcclxuICAgICAgICB2YXIgZF9oZWlnaHQgPSAkKGRvY3VtZW50KS5oZWlnaHQoKTtcclxuXHJcbiAgICAgICAgdmFyIGVfaGVpZ2h0ID0gJChjb3VudGJveCkub3V0ZXJIZWlnaHQoKTtcclxuXHJcbiAgICAgICAgaWYod190b3AgKyA4MDAgPj0gZV90b3AgfHwgd19oZWlnaHQgKyB3X3RvcCA9PSBkX2hlaWdodCB8fCBlX2hlaWdodCArIGVfdG9wIDwgd19oZWlnaHQpe1xyXG4gICAgICAgICAgICAkKFwiLnNwaW5jcmVtZW50XCIpLnNwaW5jcmVtZW50KHtcclxuICAgICAgICAgICAgICAgIHRob3VzYW5kU2VwYXJhdG9yOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IDEyMDAsXHJcbiAgICAgICAgICAgICAgICBmcm9tOiAwXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgc2hvdyA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJhbmRvbUludGVnZXIobWluLCBtYXgpIHtcclxuICAgICAgICB2YXIgcmFuZCA9IG1pbiAtIDAuNSArIE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSk7XHJcbiAgICAgICAgcmFuZCA9IE1hdGgucm91bmQocmFuZCk7XHJcbiAgICAgICAgcmV0dXJuIHJhbmQ7XHJcbiAgICB9XHJcbiAgICB0b2RheUNvdW50Lmh0bWwocmFuZG9tSW50ZWdlcigxMCwgMzApKTtcclxuICAgIHllc3RhcmRheUNvdW50Lmh0bWwocmFuZG9tSW50ZWdlcigyMCwgNDApKTtcclxuICAgIHdlZWtDb3VudC5odG1sKHJhbmRvbUludGVnZXIoMjAwLCAzMDApKTtcclxuXHJcbiAgICAkKFwiLm5hdmJhci1uYXZcIikub24oXCJjbGlja1wiLFwiYVwiLCBmdW5jdGlvbiAoZXZlbnQpIHtcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICB2YXIgaWQgID0gJCh0aGlzKS5hdHRyKCdocmVmJyksXHJcblxyXG4gICAgICAgICAgICB0b3AgPSAkKGlkKS5vZmZzZXQoKS50b3A7XHJcblxyXG4gICAgICAgICQoJ2JvZHksaHRtbCcpLmFuaW1hdGUoe3Njcm9sbFRvcDogdG9wfSwgMTUwMCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBicm93c2VyIHdpbmRvdyBzY3JvbGxcclxuICAgIHZhciBvZmZzZXQgPSAzMDAsXHJcbiAgICAgICAgb2Zmc2V0X29wYWNpdHkgPSAxMjAwLFxyXG4gICAgICAgIHNjcm9sbF90b3BfZHVyYXRpb24gPSA3MDAsXHJcbiAgICAgICAgJGJhY2tfdG9fdG9wID0gJCgnLmNkLXRvcCcpO1xyXG5cclxuICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24oKXtcclxuICAgICAgICAoICQodGhpcykuc2Nyb2xsVG9wKCkgPiBvZmZzZXQgKSA/ICRiYWNrX3RvX3RvcC5hZGRDbGFzcygnY2QtaXMtdmlzaWJsZScpIDogJGJhY2tfdG9fdG9wLnJlbW92ZUNsYXNzKCdjZC1pcy12aXNpYmxlIGNkLWZhZGUtb3V0Jyk7XHJcbiAgICAgICAgaWYoICQodGhpcykuc2Nyb2xsVG9wKCkgPiBvZmZzZXRfb3BhY2l0eSApIHtcclxuICAgICAgICAgICAgJGJhY2tfdG9fdG9wLmFkZENsYXNzKCdjZC1mYWRlLW91dCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgICRiYWNrX3RvX3RvcC5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCl7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAkKCdib2R5LGh0bWwnKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgIHNjcm9sbFRvcDogMCAsXHJcbiAgICAgICAgICAgIH0sIHNjcm9sbF90b3BfZHVyYXRpb25cclxuICAgICAgICApO1xyXG4gICAgfSk7XHJcbn0pOyJdfQ==
